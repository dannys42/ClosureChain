{"Classes/ClosureChain/Link.html#/s:12ClosureChainAAC4LinkC8succcessyyypSgF":{"name":"succcess(_:)","abstract":"<p>Signify a successful completion of a <code>Link</code>.</p>","parent_name":"Link"},"Classes/ClosureChain/Link.html#/s:12ClosureChainAAC4LinkC5throwyys5Error_pF":{"name":"throw(_:)","abstract":"<p>Any <code>Link</code> may throw by calling <code>.throw(Error)</code> or <code>throw Error</code></p>","parent_name":"Link"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO24cannotSucceedTwicePerTryyA2DmF":{"name":"cannotSucceedTwicePerTry","abstract":"<p>Cannot execute <code>Link.succeed()</code> more than once per try block</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO16cannotThrowTwiceyA2DmF":{"name":"cannotThrowTwice","abstract":"<p>Cannot <code>throw</code> or <code>Link.throw()</code> more than once per chain</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO40tryBlockExpectsPriorSuccessWithParameteryA2DmF":{"name":"tryBlockExpectsPriorSuccessWithParameter","abstract":"<p>Try block specifies a parameter requirement, but none was given by the previous try block</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO16cannotStartTwiceyA2DmF":{"name":"cannotStartTwice","abstract":"<p>Cannot .start() a chain more than once</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO20chainWasNeverStartedyA2DmF":{"name":"chainWasNeverStarted","abstract":"<p>A chain with a try block was declared but never started</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO21parameterTypeMismatchyADypXp_ypXptcADmF":{"name":"parameterTypeMismatch(_:_:)","abstract":"<p>Try block specifies a parameter requirement, but the type does not match given by the previous try block.  (expected, actual)</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO20noParameterAvailableyA2DmF":{"name":"noParameterAvailable","abstract":"<p>Undocumented</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"Failures"},"Classes/ClosureChain/Failures.html#/s:12ClosureChainAAC8FailuresO2eeoiySbAD_ADtFZ":{"name":"==(_:_:)","abstract":"<p>Determine if two ClosureChain.Failures are equal</p>","parent_name":"Failures"},"Classes/ClosureChain/Failures.html":{"name":"Failures","abstract":"<p>Failures that may be sent to the <code>catch</code> block due to run-time errors</p>","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAAC12CatchHandlera":{"name":"CatchHandler","abstract":"<p>Every <code>ClosureChain</code> has a single <code>CatchHandler</code> associated with it.  If any errors are thrown within a try-block, or from <code>ClosureChain</code> itself due to usage errors, subsequent try-blocks will no longer be called and the <code>CatchHandler</code> will receive the associated <code>Error</code>.</p>","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAACABycfc":{"name":"init()","abstract":"<p>Initialize a closure chain</p>","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAAC3tryyyyAB4LinkCKcF":{"name":"try(_:)","abstract":"<p>Execute a block.","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAAC3tryyyyx_AB4LinkCtKclF":{"name":"try(_:)","abstract":"<p>Execute a block.","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAAC5catchyyys5Error_pcF":{"name":"catch(_:)","abstract":"<p>Error handler.","parent_name":"ClosureChain"},"Classes/ClosureChain.html#/s:12ClosureChainAAC5startyyF":{"name":"start()","abstract":"<p>This method must be called at some point after all try-blocks have been defined.  No try-blocks will be executed otherwise.</p>","parent_name":"ClosureChain"},"Classes/ClosureChain/Link.html":{"name":"Link","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ClosureChain.html\">ClosureChain</a></code> sequentially executes try-blocks, also known as <code>Link</code>s.  Links must receive exactly one of either a <code>.success()</code> or a <code>.throw()</code> to signfiy the completion of the <code>Link.</code></p>","parent_name":"ClosureChain"},"Classes/ClosureChain.html":{"name":"ClosureChain","abstract":"<p>ClosureChain simplifies sequential async completion methods for Swift. It provides a familiar try-catch pattern"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}